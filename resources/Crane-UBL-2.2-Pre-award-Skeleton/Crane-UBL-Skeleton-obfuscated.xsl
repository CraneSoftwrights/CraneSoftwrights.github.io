<?xml version="1.0" encoding="UTF-8"?>
<!--
Crane-UBL-Skeleton-Obfuscated.xsl

This is a stylesheet to create a skeleton instance of an OASIS UBL 2.1
document through a browser GUI.

Copyright (C) - Crane Softwrights Ltd. 
              - http://www.CraneSoftwrights.com/links/Crane-UBL-Edit.htm

Portions copyright (C) - OASIS Open 2013. All Rights Reserved.
                 - http://www.oasis-open.org/policies-guidelines/trademark.php

Please see the internal stylesheet documentation for installation instructions.

THE AUTHOR MAKES NO REPRESENTATION ABOUT THE SUITABILITY OF THIS CODE FOR ANY
PURPOSE. THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR 
IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES 
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN 
NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED 
TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR 
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, 
EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


TECHNICAL NOTE:

This stylesheet has been purposely obfuscated and all comments have been
removed.  Please respect our copyright and do not attempt to reverse 
engineer the techniques involved.

Crane-UBL-Skeleton.xsl $Id: Crane-UBL-Skeleton.xsl,v 1.45 2017/01/24 02:38:30 admin Exp $
Crane-XML-Serialize.xsl $Id: Crane-XML-Serialize.xsl,v 1.3 2014/11/05 22:24:56 admin Exp $
-->
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xs="http://www.CraneSoftwrights.com/ns/xslstyle" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:c="urn:X-Crane" xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" xmlns:js="http://saxonica.com/ns/globalJS" xmlns:prop="http://saxonica.com/ns/html-property" xmlns:style="http://saxonica.com/ns/html-style-property" xmlns:saxon="http://saxon.sf.net/" exclude-result-prefixes="xs xsd c ixsl js prop style saxon" extension-element-prefixes="ixsl" version="2.0"><xsl:template mode="c:O369973318" match="*"><xsl:param name="c:O739946636" as="xsd:boolean" select="false()" tunnel="yes"/><xsl:value-of><xsl:value-of select="c:O739946636(.,$c:O739946636)"/><xsl:value-of select="concat('&lt;',name(.))"/><xsl:for-each select="namespace::*"><xsl:if test="not(../../namespace::*[name(.)=name(current()) and                                             .=current()])                   and name(.)!='xml'"><xsl:value-of select="concat('&#xA; xmlns',if( name(.) ) then ':' else '',                                  name(.),'=&#34;',c:O246648878(.),'&#34;')"/></xsl:if></xsl:for-each><xsl:for-each select="attribute::*"><xsl:value-of select="concat(' ',name(.),'=&#34;',                                  c:O246648878(.),'&#34;')"/></xsl:for-each><xsl:choose><xsl:when test="node()"><xsl:text>&gt;</xsl:text><xsl:apply-templates mode="c:O369973318"/><xsl:value-of select=".[*][$c:O739946636]/                         (if(parent::*) then c:O739946636(.,true()) else '&#xA;')"/><xsl:value-of select="concat('&lt;/',name(.),'&gt;')"/></xsl:when><xsl:otherwise>/&gt;</xsl:otherwise></xsl:choose></xsl:value-of></xsl:template><xsl:template mode="c:O369973318" match="text()"><xsl:value-of select="c:I184986659(.)"/></xsl:template><xsl:template mode="c:O369973318" match="comment()"><xsl:param name="c:O739946636" as="xsd:boolean" select="false()" tunnel="yes"/><xsl:value-of select="c:O739946636(.,$c:O739946636)"/><xsl:value-of select="concat('&lt;!--',.,'--&gt;')"/></xsl:template><xsl:template mode="c:O369973318" match="processing-instruction()"><xsl:param name="c:O739946636" as="xsd:boolean" select="false()" tunnel="yes"/><xsl:value-of select="c:O739946636(.,$c:O739946636)"/><xsl:value-of select="concat('&lt;?',name(.),                          if(not(string(.))) then '' else concat(' ',.),'?&gt;')"/></xsl:template><xsl:function name="c:O246648878" as="xsd:string?"><xsl:param name="string" as="xsd:string?"/><xsl:variable name="quot" as="xsd:string">"</xsl:variable><xsl:variable name="apos" as="xsd:string">'</xsl:variable><xsl:sequence select="replace(replace(c:I184986659($string),                             $quot,'&amp;quot;'),$apos,'&amp;apos;')"/></xsl:function><xsl:function name="c:I184986659" as="xsd:string?"><xsl:param name="string" as="xsd:string?"/><xsl:sequence select="replace(replace(replace($string,'&amp;',                           '&amp;amp;'),'&gt;','&amp;gt;'),'&lt;','&amp;lt;')"/></xsl:function><xsl:function name="c:O739946636" as="xsd:string?"><xsl:param name="node" as="node()"/><xsl:param name="flag" as="xsd:boolean"/><xsl:if test="$flag and $node/parent::*"><xsl:value-of><xsl:text>
</xsl:text><xsl:for-each select="$node/ancestor::*"><xsl:text> </xsl:text></xsl:for-each></xsl:value-of></xsl:if></xsl:function><xsl:variable name="c:I147989327" as="xsd:string"><xsl:text>$Date: 2017/01/24 02:38:30 $</xsl:text></xsl:variable><xsl:key name="c:I123324439" match="Row" use="Value[@ColumnRef='ObjectClass']/SimpleValue"/><xsl:key name="c:O105706662" match="Row" use="Value[@ColumnRef='DictionaryEntryName']/SimpleValue"/><xsl:variable name="c:I92493329" as="element(Row)" select="$gc/*/SimpleCodeList/Row                       [c:O82216292(.,'ComponentType')='ABIE' and                        not(contains(c:O82216292(.,'ModelName'),'CommonLibrary'))]"/><xsl:variable name="c:I73994663" as="xsd:string" select="c:O67267876($c:I92493329)"/><xsl:function name="c:O82216292" as="xsd:string?"><xsl:param name="c:I61662219" as="element(Row)"/><xsl:param name="c:O56918972" as="xsd:string"/><xsl:sequence select="$c:I61662219/Value[@ColumnRef=$c:O56918972]/SimpleValue/string()"/></xsl:function><xsl:template name="start"><xsl:result-document href="#content" method="ixsl:replace-content"><p><a href="#result">Click here to move to the XML serialized results.</a></p><xsl:for-each select="$c:I92493329"><table width="100%"><col/><col/><col/><tbody><tr valign="top" style="background-color:#f898c8"><td colspan="2" style="width:10pt;white-space:no-wrap"><samp>&lt;<xsl:value-of select="c:O82216292(.,'ComponentName')"/>&gt;</samp></td><td><xsl:copy-of select="c:I52853331(.)"/></td></tr></tbody></table><div><xsl:call-template name="c:I49329775"><xsl:with-param name="c:O46246664" select="c:O82216292(.,'ObjectClass')"/></xsl:call-template></div></xsl:for-each></xsl:result-document><xsl:result-document href="#version" method="ixsl:replace-content"><xsl:text>Revision date: </xsl:text><xsl:value-of select="concat(substring($c:I147989327,8,4),                                  substring($c:I147989327,13,2),                                  substring($c:I147989327,16,2),'-',                                  substring($c:I147989327,19,2),                                  substring($c:I147989327,22,2),'Z')"/></xsl:result-document><xsl:call-template name="c:O43526272"/></xsl:template><xsl:template name="c:I49329775"><xsl:param name="c:O46246664" as="xsd:string"/><xsl:variable name="c:O41108146" select="key('c:I123324439',$c:O46246664,$gc)"/><xsl:variable name="c:I38944559" select="concat('text-indent:',                                for $c in count(ancestor::div)-2                                return if( $c &gt; 0 ) then $c else 0,'em')"/><xsl:for-each select="$c:O41108146[position()&gt;1]"><xsl:variable name="c:I36997331" select="c:O82216292(.,'Cardinality')"/><div><div style="display:none;content:original"><div><xsl:call-template name="buildRow"/></div></div><xsl:call-template name="buildRow"><xsl:with-param name="c:O35235554" select="starts-with($c:I36997331,'1')"/></xsl:call-template><xsl:if test="c:O82216292(.,'ComponentType')='ASBIE' and                       starts-with($c:I36997331,'1')"><div style="margin-left:1em"><xsl:call-template name="c:I49329775"><xsl:with-param name="c:O46246664" select="c:O82216292(.,'AssociatedObjectClass')"/></xsl:call-template></div></xsl:if><xsl:if test="$c:I36997331='1..n'"><xsl:call-template name="buildRow"/></xsl:if></div></xsl:for-each></xsl:template><xsl:template name="buildRow"><xsl:param name="c:O35235554" as="xsd:boolean" select="false()"/><table width="100%"><col/><col/><col/><tbody><tr valign="top" style="background-color:{for $c:O33633938 in c:O82216292(.,'ComponentType') return                                if( $c:O33633938='ABIE')  then '#f898c8'                                else   if( $c:O33633938='ASBIE') then '#cbfbcb'                                else                             '#ffffff'}"><td style="width:10pt"><input type="checkbox" name="{c:O82216292(.,'DictionaryEntryName')}" value="{c:O32171592(.)}"><xsl:if test="$c:O35235554"><xsl:attribute name="checked" select="'checked'"/><xsl:attribute name="disabled" select="'disabled'"/>'
            </xsl:if></input></td><td style="width:10pt;white-space:no-wrap"><samp><xsl:value-of select="concat('&lt;',c:O32171592(.),'&gt;')"/></samp></td><td width="*"><xsl:copy-of select="c:I52853331(.)"/></td></tr></tbody></table></xsl:template><xsl:function name="c:O32171592" as="xsd:string"><xsl:param name="c:I30831109" as="element(Row)"/><xsl:sequence select="concat(if( c:O82216292($c:I30831109,'ComponentType')='BBIE' )                                 then 'cbc:' else 'cac:',                                c:O82216292($c:I30831109,'ComponentName'))"/></xsl:function><xsl:function name="c:I52853331" as="node()*"><xsl:param name="c:I30831109" as="element(Row)"/><xsl:for-each select="$c:I30831109"><small><xsl:value-of select="c:O82216292(.,'Definition')"/><xsl:for-each select="comment()"><xsl:variable name="c:I29597865" select="c:O67267876(..)"/><xsl:text> </xsl:text><a href="{concat('http://docs.oasis-open.org/ubl/os-UBL-2.1/',   'mod/summary/reports/UBL-',$c:I73994663,'-2.1.html#t-',$c:I29597865,'-',.)}" target="UBL{$c:I73994663}Window">?</a></xsl:for-each></small></xsl:for-each></xsl:function><xsl:function name="c:O67267876" as="xsd:string"><xsl:param name="c:I30831109" as="element(Row)"/><xsl:sequence select="substring-before(                       substring-after(c:O82216292($c:I30831109,'ModelName'),'-'),'-')"/></xsl:function><xsl:template match="input[@type='checkbox']" mode="ixsl:onclick"><xsl:variable name="c:O56918972" select="ixsl:get(.,'name')"/><xsl:variable name="c:O35235554" select="ixsl:get(.,'checked')"/><xsl:variable name="c:I30831109" select="key('c:O105706662',$c:O56918972,$gc)"/><xsl:variable name="c:I36997331" select="c:O82216292($c:I30831109,'Cardinality')"/><xsl:choose><xsl:when test="not($c:I30831109)"/><xsl:when test="c:O82216292($c:I30831109,'ComponentType')='BBIE'"><xsl:if test="$c:O35235554 and ends-with($c:I36997331,'n')"><xsl:result-document href="?select=../../../../.." method="ixsl:append-content"><xsl:copy-of select="               ancestor::div[div/contains(@style,'content:original')][1]/                             div[contains(@style,'content:original')]/div/*"/></xsl:result-document></xsl:if><xsl:if test="not($c:O35235554) and      count(ancestor::div[div/contains(@style,'content:original')][1]/table)&gt;1"><xsl:result-document href="?select=../../../.." method="ixsl:replace-content"/></xsl:if></xsl:when><xsl:when test="$c:O35235554"><xsl:result-document href="?select=../../../../.." method="ixsl:append-content"><div style="margin-left:1em"><xsl:call-template name="c:I49329775"><xsl:with-param name="c:O46246664" select="c:O82216292($c:I30831109,'AssociatedObjectClass')"/></xsl:call-template></div><xsl:if test="ends-with($c:I36997331,'n')"><div><xsl:for-each select="               ancestor::div[div/contains(@style,'content:original')][1]/                             div[contains(@style,'content:original')]"><div><xsl:copy-of select="."/><xsl:copy-of select="div/table"/></div></xsl:for-each></div></xsl:if></xsl:result-document></xsl:when><xsl:otherwise><xsl:if test="ends-with($c:I36997331,'n')"><xsl:result-document href="?select=../../.." method="ixsl:replace-content"><tr style="display:none;content:deleted"><td/></tr></xsl:result-document></xsl:if><xsl:result-document href="?select=../../../../../                               div[contains(@style,'margin')]                                  [not(contains(div/@style,'content:deleted'))]" method="ixsl:replace-content"><div style="display:none;content:deleted"/></xsl:result-document></xsl:otherwise></xsl:choose></xsl:template><xsl:template match="input[@type='button']" mode="ixsl:onclick"><xsl:call-template name="c:O43526272"/></xsl:template><xsl:template name="c:O43526272"><xsl:variable name="c:O28459486"><xsl:for-each select="$doc/*"><xsl:copy><xsl:apply-templates select="id('content',ixsl:page())[table]/*" mode="c:O27405430"/></xsl:copy></xsl:for-each></xsl:variable><xsl:result-document href="#result" method="ixsl:replace-content"><p><a href="#content">Click here to alter the structure of the document.</a></p><p><input type="button" value="Press here to refresh UBL instance XML markup" name="show"/></p><pre style="white-space:pre"><xsl:text>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
</xsl:text><xsl:apply-templates mode="c:O369973318" select="$c:O28459486"><xsl:with-param name="c:O739946636" select="true()" tunnel="yes"/></xsl:apply-templates></pre></xsl:result-document></xsl:template><xsl:template match="p | input[not(ixsl:get(.,'checked'))] |                      div[@id='content']/table" mode="c:O27405430"/><xsl:template match="div" mode="c:O27405430"><xsl:apply-templates mode="c:O27405430"/></xsl:template><xsl:template match="div[table]" mode="c:O27405430"><xsl:apply-templates select="table/tbody/tr[1]/td[1]/input" mode="c:O27405430"/><xsl:apply-templates select="div[not(@style)]" mode="c:O27405430"/></xsl:template><xsl:template match="input[ixsl:get(.,'checked')]" mode="c:O27405430"><xsl:variable name="c:O56918972" select="ixsl:get(.,'value')"/><xsl:choose><xsl:when test="starts-with($c:O56918972,'cbc:')"><xsl:element name="{translate($c:O56918972,'&lt;&gt;','')}" namespace="{$doc/*/namespace::cbc}"/></xsl:when><xsl:otherwise><xsl:element name="{translate($c:O56918972,'&lt;&gt;','')}" namespace="{$doc/*/namespace::cac}"><xsl:apply-templates mode="c:O27405430" select="ancestor::table[1]/following-sibling::div[1]"/></xsl:element></xsl:otherwise></xsl:choose></xsl:template></xsl:stylesheet>